{"mappings":"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","sources":["index.jsx","App.jsx","Components/Header.jsx","node_modules/@parcel/runtime-js/lib/runtime-56d0e390f00c914a.js","node_modules/@parcel/runtime-js/lib/runtime-fa2f739cf75e4034.js","Components/Home.jsx","Components/Dropdown.jsx","Components/SearchBar.jsx","node_modules/@parcel/runtime-js/lib/runtime-cb096ca22c36d1ed.js","Components/CountriesList.jsx","Components/CountryCard.jsx","Components/CountryListShimmer.jsx","Components/CardDetail.jsx","node_modules/@parcel/runtime-js/lib/runtime-cd5a9da7ab7a1716.js","node_modules/@parcel/runtime-js/lib/runtime-982c74ef8feef61c.js","Components/ErrorPage.jsx","Components/CountryDetailShimmer.jsx"],"sourcesContent":["import ReactDOM from \"react-dom/client\";\r\nimport App from \"./App\";\r\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\r\nimport Home from \"./Components/Home\";\r\nimport { useState } from \"react\";\r\nimport CardDetail from \"./Components/CardDetail\";\r\nimport ErrorPage from \"./Components/ErrorPage\";\r\n\r\nfunction MainApp () {\r\n  const [mode, setMode] = useState(true);\r\n  const [bgc, setBgc] = useState(\"skyblue\");\r\n  const [color, setColor] = useState(\"black\");\r\n  const [cardColor, setCardColor] = useState(\"white\");\r\n  const [mainColor, setMainColor] = useState(\"white\");\r\n\r\n  const modeHandler = () => {\r\n    if (mode === true) {\r\n      setMode(false);\r\n      setBgc(\"rgb(10, 10, 37)\");\r\n      setColor(\"white\");\r\n      setCardColor(\"rgb(10, 10, 37)\");\r\n      setMainColor(\"#0f0a1ddb\");\r\n    } else {\r\n      setMode(true);\r\n      setBgc(\"skyblue\");\r\n      setColor(\"black\");\r\n      setCardColor(\"white\");\r\n      setMainColor(\"white\");\r\n    }\r\n  };\r\n\r\n  const router = createBrowserRouter([\r\n    {\r\n      path: \"/\",\r\n      element: (\r\n        <App modeHandler={modeHandler} bgc={bgc} color={color} mode={mode} />\r\n      ),\r\n      children: [\r\n        {\r\n          path: \"/\",\r\n          errorElement: <ErrorPage mainColor={mainColor} color={color}/>,\r\n          element: (\r\n            <Home\r\n              mainColor={mainColor}\r\n              cardColor={cardColor}\r\n              color={color}\r\n            />\r\n          ),\r\n        },\r\n        {\r\n          path: \"/:country\",\r\n          element: <CardDetail mainColor={mainColor} color={color} mode={mode} />\r\n        },\r\n      ],\r\n    },\r\n  ]);\r\n\r\n  return <RouterProvider router={router} />;\r\n}\r\nconst root = ReactDOM.createRoot(document.querySelector(\"#root\"));\r\nroot.render(<MainApp />);\r\n","import \"./App.css\";\r\nimport Header from \"./Components/Header\";\r\nimport { Outlet } from \"react-router-dom\";\r\n\r\nconst App = ({modeHandler, mode, bgc, color}) => {\r\n  \r\n\r\n  return (\r\n    <>\r\n      <Header changeMode={modeHandler} mode={mode} bgc={bgc} color={color} />\r\n      <Outlet /> \r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import Moon from \"../Assets/photos/moon.png\";\r\nimport Sun from \"../Assets/photos/sun1.png\";\r\n\r\nconst Header = ({ changeMode, mode, bgc, color }) => {\r\n  return (\r\n    <>\r\n      <header className=\"header\" style={{ backgroundColor: bgc, color: color }}>\r\n        <div className=\"header-cont\">\r\n          <h1>Where in the World?</h1>\r\n          <div className=\"header-content\" onClick={changeMode}>\r\n            {mode ? (\r\n              <img src={Sun} alt=\"Sun\" className=\"sunImage\" />\r\n            ) : (\r\n              <img src={Moon} alt=\"Moon\" className=\"moonImage\" />\r\n            )}\r\n            {mode ? <p>Light Mode</p> : <p>Dark Mode</p>}\r\n          </div>\r\n        </div>\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","module.exports = new __parcel__URL__(\"moon.e71408da.png\").toString();","module.exports = new __parcel__URL__(\"sun1.6485393e.png\").toString();","import React, { useState } from \"react\";\r\nimport Dropdown from \"./Dropdown\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport CountriesList from \"./CountriesList\";\r\n\r\nconst Home = ({ mainColor, cardColor, color }) => {\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <main style={{ backgroundColor: mainColor }}>\r\n        <div className=\"main-container-home\">\r\n          <div className=\"searchBar-dropdown\">\r\n            <SearchBar setSearchValue={setSearchValue} />\r\n            <Dropdown setSearchValue={setSearchValue} />\r\n          </div>\r\n          <CountriesList\r\n            cardColor={cardColor}\r\n            color={color}\r\n            value={searchValue}\r\n          />\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","const Dropdown = ({ setSearchValue }) => {\r\n  return (\r\n    <>\r\n      <select\r\n        id=\"dropdown\"\r\n        onChange={(event) => setSearchValue(event.target.value)}\r\n      >\r\n        <option value=\"\" hidden>Filter by Region</option>\r\n        <option value=\"Africa\">Africa</option>\r\n        <option value=\"Americas\">Americas</option>\r\n        <option value=\"Asia\">Asia</option>\r\n        <option value=\"Europe\">Europe</option>\r\n        <option value=\"Oceania\">Oceania</option>\r\n        <option value=\"Antarctic\">Antarctic</option>\r\n      </select>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n","import Magnifier from \"../Assets/photos/magnifying-glass.png\";\r\n\r\nconst SearchBar = ({ setSearchValue }) => {\r\n  return (\r\n    <>\r\n      <div className=\"search-bar-div\">\r\n        <img src={Magnifier} alt=\"Magnifier\" className=\"magnifying-glass\" />\r\n        <input\r\n          type=\"search\"\r\n          placeholder={\"Search for a Country...\"}\r\n          className=\"search-bar-input\"\r\n          onChange={(event) => setSearchValue(event.target.value)}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","module.exports = new __parcel__URL__(\"magnifying-glass.c2ab0676.png\").toString();","import React, { useEffect, useState } from \"react\";\r\nimport CountryCard from \"./CountryCard\"; \r\nimport CountryListShimmer from \"./CountryListShimmer\";\r\n\r\nconst CountriesList = ({ cardColor, color, value }) => {\r\n  const [countriesData, setCountriesData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://restcountries.com/v3.1/all\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setCountriesData(data);\r\n      });\r\n  }, []);\r\n\r\n  return countriesData.length === 0 ? (<CountryListShimmer />) :\r\n  (\r\n    <>\r\n     <div className=\"countries-list-container\">\r\n        {countriesData\r\n          .map((country) => {\r\n            return (\r\n              <CountryCard\r\n                key={country.flags.png}\r\n                countryName={country.name.common}\r\n                population={country.population}\r\n                region={country.region}\r\n                capital={country.capital}\r\n                flag={country.flags.png}\r\n                cardColor={cardColor}\r\n                color={color}\r\n                data={country}\r\n              />\r\n            )\r\n          })\r\n          .filter((elem) => {\r\n            return elem.props.countryName\r\n              .toLowerCase()\r\n              .includes(value.toLowerCase()) || elem.props.region.toLowerCase().includes(value.toLowerCase()) ;\r\n          })}\r\n      </div>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default CountriesList;","import { Link } from \"react-router-dom\"\r\n\r\nconst CountryCard = ({countryName, population, region, capital, flag, cardColor, color, data}) => {\r\n  return (\r\n    <>\r\n    <Link to={`/${countryName}`} state={data} >\r\n      <div className=\"country-card\" style={{backgroundColor:cardColor, color:color}}>\r\n        <img src={flag} alt=\"Country Image\" />\r\n        <div className=\"country-details\" >\r\n            <h2>{countryName}</h2>\r\n            <div>\r\n                <p><b>Population: </b>{population.toLocaleString('en-IN')}</p>\r\n                <p><b>Region: </b>{region}</p>\r\n                <p><b>Capital: </b>{capital}</p>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CountryCard\r\n","import React from \"react\";\r\n\r\nconst CountryListShimmer = () => {\r\n  return (\r\n    <>\r\n      <main className=\"shimmer-main\">\r\n        {Array.from({ length: 15 }).map((val, index) => {\r\n          return (\r\n            <div className=\"shimmer-card\" key={index}>\r\n              <div className=\"shimmer-image\"></div>\r\n              <div className=\"shimmer-details\">\r\n                <h3></h3>\r\n                <p></p>\r\n                <p></p>\r\n                <p></p>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CountryListShimmer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport LeftArrow from \"../Assets/photos/leftArrow.png\";\r\nimport WhiteLeftArrow from \"../Assets/photos/whiteLeftArrow.png\";\r\nimport { Link, useLocation, useParams } from \"react-router-dom\";\r\nimport ErrorPage from \"./ErrorPage\";\r\nimport CountryDetailShimmer from \"./CountryDetailShimmer\";\r\n\r\nconst CardDetail = ({ mainColor, color, mode }) => {\r\n  // const countryName = new URLSearchParams(location.search).get(\"name\");\r\n  const params = useParams();\r\n  const countryName = params.country;\r\n  const [countryData, setCountryData] = useState(null);\r\n  const [notFound, setNotFound] = useState(false);\r\n  const { state } = useLocation();\r\n\r\n  function updateCountryData(data) {\r\n    setCountryData({\r\n      name: data.name.common,\r\n      population: data.population.toLocaleString(\"en-IN\"),\r\n      flag: data.flags.png,\r\n      capital: data.capital?.join(\", \"),\r\n      region: data.region,\r\n      nativeName: data.name.nativeName\r\n        ? Object.values(data.name.nativeName)\r\n            .map((nativeName) => nativeName.official)\r\n            .join(\", \")\r\n        : \"\",\r\n      subRegion: data.subregion,\r\n      currencies: data.currencies\r\n        ? Object.values(data.currencies)\r\n            .map((currency) => currency.name)\r\n            .join(\", \")\r\n        : \"\",\r\n      languages: data.languages ? Object.values(data.languages).join(\", \") : \"\",\r\n      topLevelDomain: data.tld.join(\", \"),\r\n      timeZone: data.timezones.join(\", \"),\r\n      borders: [],\r\n    });\r\n\r\n    if (!data.borders) {\r\n      data.borders = [];\r\n    }\r\n\r\n    Promise.all(\r\n      data.borders.map((border) => {\r\n        return fetch(`https://restcountries.com/v3.1/alpha/${border}`)\r\n          .then((res) => res.json())\r\n          .then(([borderCountry]) => borderCountry.name.common);\r\n      })\r\n    ).then((borders) => {\r\n      setTimeout(() => {\r\n        setCountryData((prevState) => ({ ...prevState, borders }));\r\n      }, 100);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (state) {\r\n      updateCountryData(state);\r\n      return;\r\n    }\r\n\r\n    fetch(`https://restcountries.com/v3.1/name/${countryName}?fullText=true`)\r\n      .then((res) => res.json())\r\n      .then(([data]) => {\r\n        updateCountryData(data);\r\n      })\r\n      .catch((err) => {\r\n        setNotFound(true);\r\n      });\r\n  }, [countryName]);\r\n\r\n  if (notFound) {\r\n    return <ErrorPage mainColor={mainColor} color={color} />;\r\n  }\r\n\r\n  return countryData === null ? (\r\n    <CountryDetailShimmer />\r\n  ) : (\r\n    <>\r\n      <div\r\n        className=\"countryDetailCard\"\r\n        style={{ backgroundColor: mainColor, color: color }}\r\n      >\r\n        <div className=\"countryDetailCard-container\">\r\n          <span>\r\n            <button\r\n              className=\"backBtn\"\r\n              onClick={() => {\r\n                history.back();\r\n              }}\r\n              style={{ color: color, backgroundColor: mainColor }}\r\n            >\r\n              {\" \"}\r\n              {mode ? (\r\n                <img\r\n                  src={LeftArrow}\r\n                  alt=\"left-arrow\"\r\n                  id=\"leftArrowImg\"\r\n                  style={{ width: \"15px\", color: color, display: \"flex\" }}\r\n                />\r\n              ) : (\r\n                <img\r\n                  src={WhiteLeftArrow}\r\n                  alt=\"left-arrow\"\r\n                  id=\"leftArrowImg\"\r\n                  style={{ width: \"21px\", color: color, display: \"flex\" }}\r\n                />\r\n              )}\r\n              &nbsp; Back\r\n            </button>\r\n          </span>\r\n          <div className=\"countryDetailsContainer\">\r\n            <img src={countryData.flag} alt={countryName + \" Flag\"} />\r\n            <div className=\"countryDetails\">\r\n              <h1>{countryData.name}</h1>\r\n              <div className=\"details\">\r\n                {\r\n                  <p>\r\n                    <b> Native Name:- </b> &nbsp;{\" \"}\r\n                    <span>{countryData.nativeName} </span>{\" \"}\r\n                  </p>\r\n                }\r\n                <p>\r\n                  <b> Population:-</b>&nbsp;{\" \"}\r\n                  <span>{countryData.population}</span>{\" \"}\r\n                </p>\r\n                <p>\r\n                  <b> Region:- </b>&nbsp; <span>{countryData.region}</span>{\" \"}\r\n                </p>\r\n                <p>\r\n                  <b>Sub Region:-</b>&nbsp; <span>{countryData.subRegion}</span>{\" \"}\r\n                </p>\r\n                <p>\r\n                  <b>Capital:-</b> &nbsp;<span>{countryData.capital}</span>{\" \"}\r\n                </p>\r\n\r\n                <p>\r\n                  <b>Top Level Domains:- </b> &nbsp;\r\n                  <span> {countryData.topLevelDomain} </span>{\" \"}\r\n                </p>\r\n                <p>\r\n                  <b>Currencies:-</b> &nbsp;\r\n                  <span> {countryData.currencies} </span>{\" \"}\r\n                </p>\r\n                <p>\r\n                  <b>Languages:-</b>&nbsp; <span>{countryData.languages} </span>{\" \"}\r\n                </p>\r\n                <p>\r\n                  <b>Time Zones:-</b>&nbsp; <span>{countryData.timeZone} </span>{\" \"}\r\n                </p>\r\n              </div>\r\n              {countryData.borders.length !== 0 && (\r\n                <p style={{ padding: \"6px\" }}>\r\n                  <b>Border Countries:-</b> &nbsp;\r\n                  {countryData.borders.map((border) => (\r\n                    <Link\r\n                      className=\"border-link\"\r\n                      key={border}\r\n                      style={{ backgroundColor: mainColor, color: color }}\r\n                      to={`/${border}`}\r\n                    >\r\n                      {border}\r\n                    </Link>\r\n                  ))}\r\n                </p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardDetail;\r\n","module.exports = new __parcel__URL__(\"leftArrow.24e49998.png\").toString();","module.exports = new __parcel__URL__(\"whiteLeftArrow.ddefa3da.png\").toString();","import React from 'react'\r\nimport { useRouteError } from 'react-router-dom'\r\n\r\nconst ErrorPage = ({mainColor, color}) => {\r\n  const error = useRouteError(); \r\n  return (\r\n    <div className='error-page' style={{backgroundColor: mainColor, color: color}}>\r\n      <h1>Page Not Found</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ErrorPage\r\n","import React from 'react'\r\n\r\nconst CountryDetailShimmer = () => {\r\n  return (\r\n    <>\r\n      <div className='country-detail-card-shimmer'>\r\n        <div className='button'></div>\r\n        <div className='country-details-container-shimmer'>\r\n            <div className='image'></div>\r\n            <div className='country-details-shimmer'>\r\n                <h1></h1>\r\n                <div className='details-shimmer'>\r\n                    <p></p>\r\n                    <p></p>\r\n                    <p></p>\r\n                    <p></p>\r\n                    <p></p>\r\n                    <p></p>\r\n                    <p></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CountryDetailShimmer\r\n"],"names":[],"version":3,"file":"index.js.map"}